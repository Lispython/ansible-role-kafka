---
- name: "kafka | {{ ansible_hostname }} | Create kafka group"
  group:
    name: '{{ kafka_group }}'
    state: present

- name: "kafka | {{ ansible_hostname }} | Create kafka user"
  user:
    name: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: present
    createhome: no

- name: "kafka | {{ ansible_hostname }} | Set kafka_archive_name variable"
  set_fact:
    kafka_archive_name: "kafka_{{ kafka_scala_version }}-{{ kafka_version }}"

- name: "kafka | {{ ansible_hostname }} | Unarchive kafka release package"
  unarchive:
    src: "{{ kafka_download_url }}"
    dest: /usr/local
    remote_src: yes
    creates: "/usr/local/{{ kafka_archive_name }}"

- name: "kafka | {{ ansible_hostname }} | Create a link to unarchived kafka destination"
  file:
    src: "/usr/local/{{ kafka_archive_name }}"
    dest: '{{ kafka_install_dir }}'
    owner: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: link

- name: "kafka | {{ ansible_hostname }} | Create kafka directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
  loop:
    - "{{ kafka_data_dir }}"
    - "{{ kafka_log_dir }}"
    - "{{ kafka_conf_dir }}"

- name: "kafka | {{ ansible_hostname }} | Create kafka service"
  template:
    src: kafka.service.j2
    dest: "/etc/systemd/system/kafka.service"
    mode: '0644'
  notify: Restart Kafka

- name: "kafka | {{ ansible_hostname }} | Enable kafka service"
  systemd:
    name: kafka
    enabled: yes
    daemon_reload: yes
